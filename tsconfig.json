{
  "compilerOptions": {
    "target": "ES2024",
    "module": "ES2022",
    "moduleResolution": "bundler",
    "strict": true,
    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noImplicitOverride": true,
    "noImplicitThis": true,
    "noUncheckedIndexedAccess": true,
    "noPropertyAccessFromIndexSignature": true,
    "exactOptionalPropertyTypes": false,
    "noFallthroughCasesInSwitch": true,
    "allowUnreachableCode": false,
    "allowUnusedLabels": false,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noUncheckedSideEffectImports": true,
    "allowUmdGlobalAccess": false,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "useUnknownInCatchVariables": true,
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "useDefineForClassFields": true,
    "experimentalDecorators": false,
    "emitDecoratorMetadata": false,
    "preserveValueImports": false,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    "removeComments": true,
    "stripInternal": true,
    "downlevelIteration": false,
    "importHelpers": false,
    "declaration": false,
    "declarationMap": false,
    "sourceMap": false,
    "inlineSourceMap": false,
    "inlineSources": false,
    "baseUrl": "./",
    "outDir": "./dist",
    "rootDir": "./",
    "noEmit": true,
    "emitDeclarationOnly": false,
    "allowImportingTsExtensions": false,
    "allowArbitraryExtensions": false,
    "incremental": false,
    "composite": false,
    "skipLibCheck": false,
    "skipDefaultLibCheck": false,
  },
  "include": [
    "src/**/*",
    "eslint.config.ts",
  ],
  "exclude": [
    "node_modules",
    "dist",
    "external",
    "**/*.js",
    "**/*.mjs",
    "**/*.cjs"
  ],
  "ts-node": {
    "esm": true,
    "compilerOptions": {
      "module": "ES2022",
      "target": "ES2024",
      "sourceMap": true,
      "incremental": true,
    }
  }
}